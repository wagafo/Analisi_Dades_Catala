- Class: meta
  Course: Programació en R
  Lesson: Blocs Bàsics per Construir
  Author: Nick Carchedi, Walter Garcia-Fontes
  Type: Standard
  Organization: JHU Biostat
  Version: 2.2.0

- Class: text
  Output: "En aquesta lliçó, explorarem alguns blocs bàsics per construir programes al llenguatge de programació R"

- Class: text
  Output: "Si en qualsevol punt voleu més informació sobre un tema particular relacionat
    amb R, podeu entrar help.start() a la línia d'ordres, cosa que obrirà un menú de recursos
    (o bé dins de RStudio o al vostre navegador web per defecte, depenent de la vostra
    configuració). Alternativament, una cerca simple a Internet sovint us dóna la resposta
    que esteu buscant."

- Class: cmd_question
  Output: "En la seva forma més simple, l'R es pot usar com una calculadora interactiva. Entreu 5 + 7 i premeu Intro."
  CorrectAnswer: 5 + 7
  AnswerTests: omnitest(correctExpr='5 + 7')
  Hint: Entreu 5 + 7 i premeu Intro.  

- Class: text
  Output: "L'R simplement imprimeix el resultat de 12 per defecte. Tanmateix, l'R és un llenguatge
  de programació i sovint la raó que fem servir un llenguatge de programació en comptes de una calculadora
  és per automatitzar processos o evitar repeticions innecessàries."

- Class: text
  Output: "En aquest cas, podem usar el nostre resultat de dalt a un segon càlcul. En comptes
  de tornar a escriure 5 + 7 cada cop que ens cal, simplement podem crear una nova variable
  que emmagatzema el resultat."

- Class: text
  Output: "La manera que assigneu un valor a una variable a l'R és usant el operador d'assignació,
  que és simplement un símbol «menys que» seguit de un signe «menys». Es veu de la manera
  seguent: <-"

- Class: text
  Output: "Penseu l'operació d'assignació com una fletxa. Esteu assignant el valor de
  la part dreta al nom de la variable a la part esquerra de la fletxa."

- Class: cmd_question
  Output: "Per assignar el resultat de 5 + 7 a una nova variable anomenada x, escriviu
  x <- 5 + 7. Això es pot llegir com «x obté 5 més 7». Proveu-ho ara."
  CorrectAnswer: x <- 5 + 7
  AnswerTests: any_of_exprs('x <- 5 + 7', 'x <- 7 + 5')
  Hint: "Escriviu x <- 5 + 7. És important incloure un espai simple a cada costat de 
  l'operador d'assignació, però NO poseu un espai entre «<» i «-», els símbols  que 
  formen la fletxa."

- Class: text
  Output: "Haureu notat que l'R no ha imprès el resultat de 12 aquest cop. Quan useu
  el operador d'assignació, l'R suposa que que no voleu veure el resultat immediatament,
  sinó que intenteu usar el resultat per alguna altra cosa més tard."

- Class: cmd_question
  Output: "Per veure els continguts de la variable x, simplement entreu x i premeu Intro.
  Proveu-ho ara."
  CorrectAnswer: x
  AnswerTests: omnitest(correctExpr='x')
  Hint: "Entreu x i premeu Intro. Això imprimirà automàticament el valor de x."

- Class: cmd_question
  Output: "Ara emmagatzemeu el resultat de x - 3 en una nova variable anomenada y."
  CorrectAnswer: y <- x - 3
  AnswerTests: omnitest(correctExpr='y <- x - 3')
  Hint: "Entreu y <- x - 3 i premeu Intro. Usar x - e o x-3 és preferència personal, però
  és un bon hàbit incloure un espai als costats de l'operador d'assignació."

- Class: cmd_question
  Output: "Quin és el valor de y? Entreu y i esbrineu-ho."
  CorrectAnswer: 'y'
  AnswerTests: omnitest(correctExpr='y')
  Hint: "Entreu y i premeu Intro."

- Class: text
  Output: "Crearem ara una col·lecció petita de números anomenada un vector. Qualsevol 
  objecte que contingui dades s'anomena una estructura de dades i els vectors numèrics 
  són el tipus més simple d'estructura de dades a l'R. De fet, fins i tot un número únic
  es considera un vector de longitud igual a u."

- Class: cmd_question
  Output: "La forma més senzilla de crear un vector és amb la función c(), que vol dir
  «concatena» o «combina». Per crear un vector que contingui els números 1, 9 i 3.14
  entreu c(1.1, 9, 3.14). Proveu-ho ara i emmagatzemeu el resultat a una variable z. "
  CorrectAnswer: z <- c(1.1, 9, 3.14)
  AnswerTests: omnitest(correctExpr='z <- c(1.1, 9, 3.14)')
  Hint: "Si s'entra z <- c(1.1, 9, 3.14) s'assignarà el vector (1.1, 9 , 3.14) a una nova
  variable anomenada z. No es requereix incloure espais senzills després de les comes 
  al vector, però ajuda a fer el vostre codi menys atapeït i més llegible."

- Class: cmd_question
  Output: "Sempre que tingueu preguntes sobre una funció en particular, podeu accedir 
  els fitxers integrats d'ajuda de l'R mitjançant l'ordre «?». Per exemple, si voleu més
  informació sobre la funció c(), entreu ?c sense els parèntesis que segueixen normalment
  al nom d'una funció. Proveu-ho."
  CorrectAnswer: ?c
  AnswerTests: omnitest(correctExpr='?c')
  Hint: Type ?c and press Enter. This will bring up the help file for the c() function.

- Class: cmd_question
  Output: Entreu z per veure els seus continguts. Noteu que no hi ha comes separant el valors
  a la sortida.
  CorrectAnswer: z
  AnswerTests: omnitest(correctExpr='z')
  Hint: Entreu z i premeu intro per veure els seus continguts.

- Class: cmd_question
  Output: Podeu combinar vectors per fer un nou vector. Creeu un nou vector que contigui
  z, 55, i z un altre cop, en aquest ordre. No assigneu aquest vector a una variable nova,
  per poder veure el resultat immediatament.
  CorrectAnswer: c(z, 555, z)
  AnswerTests: omnitest(correctExpr='c(z, 555, z)')
  Hint: Entreu c(z, 555, z). No creeu una variable nova. Simplement volem veure el resultat.

- Class: cmd_question
  Output: 'Es poden usar vectors numèrics en expressions aritmètics. Entre el següent per veure què passa: z * 2 + 100.'
  CorrectAnswer: z * 2 + 100
  AnswerTests: omnitest(correctExpr='z * 2 + 100')
  Hint: Entreu z + 2 + 100, sense assignar el reultat a una variable. El símbol «*» s'usa
  per multiplicar.

- Class: text
  Output: First, R multiplied each of the three elements in z by 2. Then it added
    100 to each element to get the result you see above.

- Class: text
  Output: Other common arithmetic operators are `+`, `-`, `/`, and `^` (where x^2
    means 'x squared'). To take the square root, use the sqrt() function and to take
    the absolute value, use the abs() function.

- Class: cmd_question
  Output: Take the square root of z - 1 and assign it to a new variable called my_sqrt.
  CorrectAnswer: my_sqrt <- sqrt(z - 1)
  AnswerTests: omnitest(correctExpr='my_sqrt <- sqrt(z - 1)')
  Hint: Assign the result of sqrt(z - 1) to a variable called my_sqrt.

- Class: mult_question
  Output: Before we view the contents of the my_sqrt variable, what do you think it
    contains?
  CorrectAnswer: a vector of length 3
  AnswerChoices: a vector of length 3; a single number (i.e a vector of length 1);
    a vector of length 0 (i.e. an empty vector)
  AnswerTests: omnitest(correctVal='a vector of length 3')
  Hint: 'Think about how R handled the other ''vectorized'' operations: element-by-element.'

- Class: cmd_question
  Output: Print the contents of my_sqrt.
  CorrectAnswer: my_sqrt
  AnswerTests: omnitest(correctExpr='my_sqrt')
  Hint: Just type my_sqrt and press Enter to view its value.

- Class: text
  Output: As you may have guessed, R first subtracted 1 from each element of z, then
    took the square root of each element. This leaves you with a vector of the same
    length as the original vector z.

- Class: cmd_question
  Output: Now, create a new variable called my_div that gets the value of z divided
    by my_sqrt.
  CorrectAnswer: my_div <- z / my_sqrt
  AnswerTests: omnitest(correctExpr='my_div <- z / my_sqrt')
  Hint: Enter my_div <- z / my_sqrt. The spaces on either side of the `/` sign are not
    required, but can often improve readability by making code appear less cluttered.
    In the end, it's personal preference.

- Class: mult_question
  Output: Which statement do you think is true?
  CorrectAnswer: The first element of my_div is equal to the first element of z divided
    by the first element of my_sqrt, and so on...
  AnswerChoices: The first element of my_div is equal to the first element of z divided
    by the first element of my_sqrt, and so on...; my_div is a single number (i.e a
    vector of length 1); my_div is undefined
  AnswerTests: omnitest(correctVal='The first element of my_div is equal to the first
    element of z divided by the first element of my_sqrt, and so on...')
  Hint: Think about how R handled the other 'vectorized' operations like `+` and `*`.

- Class: cmd_question
  Output: Go ahead and print the contents of my_div.
  CorrectAnswer: my_div
  AnswerTests: omnitest(correctExpr='my_div')
  Hint: Type my_div and press Enter to see its contents.

- Class: text
  Output: When given two vectors of the same length, R simply performs the specified
    arithmetic operation (`+`, `-`, `*`, etc.) element-by-element. If the vectors
    are of different lengths, R 'recycles' the shorter vector until it is the same
    length as the longer vector.

- Class: text
  Output: When we did z * 2 + 100 in our earlier example, z was a vector of length
    3, but technically 2 and 100 are each vectors of length 1.

- Class: text
  Output: 'Behind the scenes, R is ''recycling'' the 2 to make a vector of 2s and
    the 100 to make a vector of 100s. In other words, when you ask R to compute z
    * 2 + 100, what it really computes is this: z * c(2, 2, 2) + c(100, 100, 100).'

- Class: cmd_question
  Output: To see another example of how this vector 'recycling' works, try adding
    c(1, 2, 3, 4) and c(0, 10). Don't worry about saving the result in a new variable.
  CorrectAnswer: c(1, 2, 3, 4) + c(0, 10)
  AnswerTests: omnitest(correctExpr='c(1, 2, 3, 4) + c(0, 10)')
  Hint: Enter c(1, 2, 3, 4) + c(0, 10) in the console to see how R adds two vectors
    of different length. Don't assign the result to a variable.

- Class: text
  Output: If the length of the shorter vector does not divide evenly into the length
    of the longer vector, R will still apply the 'recycling' method, but will throw
    a warning to let you know something fishy might be going on.

- Class: cmd_question
  Output: Try c(1, 2, 3, 4) + c(0, 10, 100) for an example.
  CorrectAnswer: c(1, 2, 3, 4) + c(0, 10, 100)
  AnswerTests: omnitest(correctExpr='c(1, 2, 3, 4) + c(0, 10, 100)')
  Hint: Type c(1, 2, 3, 4) + c(0, 10, 100) to see how R handles adding two vectors,
    when the shorter vector's length does not divide evenly into the longer vector's
    length. Don't worry about assigning the result to a variable.

- Class: text
  Output: Before concluding this lesson, I'd like to show you a couple of time-saving tricks.

- Class: text
  Output: Earlier in the lesson, you computed z * 2 + 100. Let's pretend that you made a mistake and that you meant to add 1000 instead of 100. You could either re-type the expression, or...

- Class: cmd_question
  Output: In many programming environments, the up arrow will cycle through previous commands. Try hitting the up arrow on your keyboard until you get to this command (z * 2 + 100), then change 100 to 1000 and hit Enter. If the up arrow doesn't work for you, just type the corrected command.
  CorrectAnswer: z * 2 + 1000
  AnswerTests: omnitest(correctExpr='z * 2 + 1000')
  Hint: If your environment does not support the up arrow feature, then just type the corrected command to move on.

- Class: text
  Output: Finally, let's pretend you'd like to view the contents of a variable that you created earlier, but you can't seem to remember if you named it my_div or myDiv. You could try both and see what works, or...

- Class: cmd_question
  Output: You can type the first two letters of the variable name, then hit the Tab key (possibly more than once). Most programming environments will provide a list of variables that you've created that begin with 'my'. This is called auto-completion and can be quite handy when you have many variables in your workspace. Give it a try. (If auto-completion doesn't work for you, just type my_div and press Enter.)
  CorrectAnswer: my_div
  AnswerTests: omnitest(correctExpr='my_div')
  Hint: If your programming environment doesn't support auto-completion, just type my_div and hit Enter to move on.

- Class: mult_question
  Output: "Would you like to receive credit for completing this course on
    Coursera.org?"
  CorrectAnswer: NULL
  AnswerChoices: Yes;No
  AnswerTests: coursera_on_demand()
  Hint: ""
